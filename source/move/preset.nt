import {
  core.float.parse {parse-float},
  core.int.parse {parse-int},
  this.move.state {pop-head, pop-key, pop-key-value},
  this.rule.argot {argot},
  this.rule.error {Parse-Failure},
}

inline flag(key: &text): argot(bool) {
  function (k) {
    Right(pop-key(k, key))
  }
}

inline int-required(key: &text): argot(int) {
  function (k) {
    try value = pop-key-value(k, key);
    let parse-result on value = parse-int(value);
    match parse-result {
    | Left(_) =>
      Left(Parse-Failure(*key, value))
    | Right(v) =>
      Right(v)
    }
  }
}

inline float-required(key: &text): argot(float) {
  function (k) {
    try value = pop-key-value(k, key);
    let parse-result on value = parse-float(value);
    match parse-result {
    | Left(_) =>
      Left(Parse-Failure(*key, value))
    | Right(v) =>
      Right(v)
    }
  }
}

inline text-required(key: &text): argot(text) {
  function (k) {
    try value = pop-key-value(k, key);
    Right(value)
  }
}

inline text-argument: argot(text) {
  function (k) {
    try value = pop-head(k);
    Right(value)
  }
}
